#pp.156
#pLSAに関するRスクリプト
install.packages("svs")
library(svs)
##⇩用いるデータはmatrix形式に変換する必要がある．
res<-fast_plsa(as.matrix(sakubun[,-32]), k=3)
res$prob1 #個体がトピックに属する確率
res$prob2 #変数がトピック内における確率

##図8.3の作成例
term<-res$prob2
m<-nrow(term)
k<-ncol(term)
colnames(term)<-c("Topic_1", "Topic_2", "Topic_3")
par(mar = c(4.2, 5, 2, 2))
plot(0, 0, col = "white", ylim = c(-0, m+2), xlim = c(-0, k+1), xlab = "", 
     ylab = "", axes = FALSE)
for(i in 1:m) lines(x = c(1, k), y = c(i, i), col = "gray")
for(i in 1:k) lines(x = c(i, i), y = c(1, m), col = "gray")
points(col(term), m-row(term)+1, pch = 19,
       cex = as.matrix(term*25+1),
       col = rainbow(k, alpha = 0.33)[col(term)])
text((1:k)+0.3, 0, colnames(term), adj = c(1, 0.5), cex = 0.8, las = 3)
text(0.3, 1:m, rownames(term)[m:1], cex = 8)

##⇩図8.4の作成例
install.packages("lattice")
library(lattice)
levelplot(term, scales = list(x = list(rot = 90)))

##⇩図8.5の作成例
install.packages("wordcloud")
library("wordcloud")
comparison.cloud(term, scale=c(6, 2.5), title.size = 2)

##⇩図8.6の作成例
x<-res$prob1
split.screen(figs = c(2, 1))  #グラフ画面を2つに分割する
screen(1)                     #スクリーン1にグラフを作成する
par(mar=c(1, 4, 2, 2))
hc<-hclust(dist(x), "ward.D2")
plot(hc, hang=-1, xlab="", sub="")
rect.hclust(hc, k=3, border=2:4)
##⇩スクリーン2に3つのグラフを作成する
split.screen(figs = c(1, 3), screen = 2)
par(mar=c(4, 4, 1, 1))
screen(3)
twl<-as.matrix(res$prob2[,2])
twl1<-sort(twl[,1], decreasing=FALSE)
barplot(tail(twl1, 10), las=2, horiz = TRUE, col=2, main=paste("Topic", 2))
screen(4)
par(mar=c(4, 4, 1, 1))
twl<-as.matrix(res$prob2[,3])
twl1<-sort(twl[,1], decreasing=FALSE)
barplot(tail(twl1, 10), las=2, horiz = TRUE,
        col=3, main=paste("Topic", 3))
screen(5)
par(mar=c(4, 4, 1, 1))
twl<-as.matrix(res$prob2[,1])
twl1<-sort(twl[,1], decreasing=FALSE)
barplot(tail(twl1, 10), las=2, horiz = TRUE,
        col=4, main=paste("Topic", 1))

#pp.159
install.packages(c("slam", "tm", "topicmodels"))
library(slam)
library(tm)
library(topicmodels)
resu<-LDA(sakubun[,-32], method="Gibbs", k=3)
topics(resu)                      #個体が属するトピックの番号を返す
terms(resu, 10)                   #トピックにおける上位10語を返す
term<-t(posterior(resu)$term)     #トピック内の語句確率を返す
##図11の作成は，図8.9の作成と同様である．
plot(hclust(dist(topics(resu))))  #クラスターの樹形図を作成する

#pp.165
#本節の内容におけるトピック数の推定のRスクリプト
install.packages("ldatuning")
library(ldatuning)
library("topicmodels")
tun<-FindTopicsNumber(sakubun, topics=2:15,
                      method="Gibbs",
                      metrics=c("Griffiths2004", "CaoJuan2009", "Arun2010",
                                "Deveaud2014"))
FindTopicsNumber_plot(tun)
