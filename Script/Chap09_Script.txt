#図9.1~9.2を作成するスクリプト
##ユークリッド距離とward.D2法
sakubun<-read.csv("https://github.com/mining-jin/IWANAMI/blob/master/data/sakubun259f.csv", row.names = 1, fileEncoding = "Shift-JIS")
sakubunp<-sakubun/rowSums(sakubun)
plot(hclust(dist(sakubunp[,-32]), "ward.D2"), hang = -1)

##RSJD距離
jsd<-function(x){
  x<-x+1e-006 #怠けな対処になる（分母が0にならないようにする．）
  x<-(x/apply(x, 1, sum))
  apply(x, 1, function(y){#各行に次の関数を適用する
    apply(x, 1, function(z){
      sjd<-sqrt(sum((y*log(2*y/(y+z))+z*log(2*z/(y+z)))/2))
    })
  })
}
##RJSD距離とward.D2法
plot(hclust(as.dist(jsd(sakubunp[,-32])), "ward.D2"), hang = -1)
##パッケージphilentropyには40数種類の類似度と距離を計算する関数がある．その中の"jensen-shannon"はJSDであり，平方根を取っていない．

#図9.3と9.4を作成するスクリプト
heatmap(as.matrix(sakubunp[,-32]))#デフォルトのまま
##個体間の距離はJSD，変数間の距離はキャンベラ距離を用いた場合
R<-hclust(as.dist(jsd(sakubunp[,-32])), "ward.D2")
C<-hclust(dist(t(sakubunp[,-32]), "can"), "ward.D2")
heatmap(as.matrix(sakubunp[,-32]), Colv = as.dendrogram(C), Rowv = as.dendrogram(R))#図9.3の作成
##以下図9.4を作成する.
##引数k_row=　は行のクラスター，k_col= は列のクラスターを指定する
library(heatmaply); library(gplots)
heatmaply(as.matrix(sakubunp[,-32]), Colv = as.dendrogram(C), Rowv = as.dendrogram(R), k_row = 3, k_col = 4)

#k平均法の例
set.seed(10)
resu<-kmeans(sakubunp[,-32], centers = 3)
summary(resu)
resu$cluster#クラスタリングの結果を返す．
#<結果を省略する>

#クラスター数の推定
library("NbClust")
ind.list<-c("kl", "ch", "hartigan", "cindex", "db", "silhouette", 
            "duda", "pseudot2", "ratkowsky", "ball", "ptbiserial", "gap", "frey",
            "mcclain", "gamma", "gplus", "tau", "dunn")
leg<-length(ind.list)
resM2<-matrix(0, leg, 9)
colnames(resM2)<-c("kmean", "ward.D", "ward.D2", "single", "complete",
                   "average", "mcquitty", "median", "centroid")
rownames(resM2)<-ind.list
XX<-sakubunp[,-32]
for(i in 1:leg){
  resM2[i,1]<-as.integer(NbClust(XX, method = "kmean",
                                 index = ind.list[i])$Best.nc[1])
  resM2[i,2]<-as.integer(NbClust(XX, method = "ward.D",
                                 index = ind.list[i])$Best.nc[1])
  resM2[i,3]<-as.integer(NbClust(XX, method = "ward.D2",
                                 index = ind.list[i])$Best.nc[1])
  resM2[i,4]<-as.integer(NbClust(XX, method = "single",
                                 index = ind.list[i])$Best.nc[1])
  resM2[i,5]<-as.integer(NbClust(XX, method = "complete",
                                 index = ind.list[i])$Best.nc[1])
  resM2[i,6]<-as.integer(NbClust(XX, method = "average",
                                 index = ind.list[i])$Best.nc[1])
  resM2[i,7]<-as.integer(NbClust(XX, method = "mcquitty",
                                 index = ind.list[i])$Best.nc[1])
  resM2[i,8]<-as.integer(NbClust(XX, method = "median",
                                 index = ind.list[i])$Best.nc[1])
  resM2[i,9]<-as.integer(NbClust(XX, method = "centroid",
                                 index = ind.list[i])$Best.nc[1])
}
resM2
#<結果を省略>

#主成分分析とt-SNE法の比較
##図9.6に用いたデータを読み込む
path<-"https://github.com/mining-jin/IWANAMI/blob/master/data/saku11.csv"
saku11<-read.csv(path, head = T, row.names = 1, fileEncoding = "Shift-JIS")
saku11p<-100*saku11/apply(saku11, 1, sum)
XX<-saku11p[,1:40]
col<-c(1:8, "saddlebrown", "rosybrown2")
pca<-prcomp(XX)$x
plot(pca[,1], pca[,2], pch="", xlab = "PCA1", ylab = "PCA2")
text(pca[,1], pca[,2], rownames(XX), col=col)

library(Rtsne) #t-SNEのパッケージを読み込む．
set.seed(0) #図9.6(b)を再現するため，ランスの種を指定する．
sne<-Rtsne(as.matrix(XX))$Y
plot(sne[,1], sne[,2], pch="", xlab="SNE1", ylab="SNE2")
text(sne[,1], sne[,2], rownames(XX), col=col)

#図9.7のUMAP作成
spath<-"https://github.com/mining-jin/IWANAMI/blob/master/data/saku11.csv"
saku11<-read.csv(spath, head=T, row.names=1, fileEncoding="Shift-JIS")
saku11p<-100*saku11/apply(saku11, 1, sum)
XX<-saku11p[,1:40]
col<-c(1:8, "saddlebrown", "rosybrown2")
install.packages("uwot"); library(uwot)
out<-umap(XX, n_neighbors=5)
plot(out, type="n"); text(out[,1], out[,2], rownames(XX), col=col)
out<-umap(XX, n_neighbors=15)
plot(out, type="n"); text(out[,1], out[,2], rownames(XX), col=col)