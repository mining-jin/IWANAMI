#XX<-read.delim("clipboard")


語1,語2,Freq
文章,構成,1
文章,要素,1
文章,文,1
文章,情報,1
文章,分析,1
構成,要素,1
構成,文,1
構成,情報,1
構成,分析,1
要素,文,1
要素,情報,1
要素,分析,1
文,情報,1
文,分析,1
情報,分析,1

keitai<-read.delim("clipboard",sep=",")
library(igraph)
keitai.g<-graph.data.frame(keitai[,1:2], directed=TRUE)
E(keitai.g)$weight<-keitai[,3]
V(keitai.g)$color<-"yellowgreen"
tkplot(keitai.g,edge.label=E(keitai.g)$weight)

#keitai.g<-simplify(keitai.g, remove.loops = T) 
keitai.g<-graph.data.frame(keitai[-1,1:2], directed=TRUE)
E(keitai.g)$weight<-keitai[,3]
##vizNet
install.packages("visNetwork")
library(visNetwork)
data <- toVisNetworkData(keitai.g)
visNetwork(data$nodes, data$edges)%>% 
visIgraphLayout(layout = "layout_with_fr") %>%
visEdges(arrows = "middle")



#nodeSize<-degree(keitai.g)
weights<-visData$edges[,3]
nodes<-data.frame(visData$nodes, font.size =15, value = nodeSize)
edges<-data.frame(visData$edges,label=weights, arrows="to", width = 1.0, dashes=TRUE, smooth=TRUE,shadow=TRUE)
visNetwork(nodes = nodes, edges = edges)

# 
#g<-simplify(keitai.g, remove.loops = T) 

形態素1,形態素2,共起
普通名詞,接続助詞,2
普通名詞,格助詞,2
サ変名詞,動詞,1
サ変名詞,普通名詞,1
副詞,動詞,1
副詞的名詞,格助詞,1
動詞,動詞性接尾辞,1
動詞,句点,1
動詞性接尾辞,動詞性接尾辞,1
動詞性接尾辞,普通名詞,1
接続助詞,サ変名詞,1
接続助詞,副詞的名詞,1
格助詞,サ変名詞,1
格助詞,副詞,1
格助詞,普通名詞,1

pos<-read.delim("clipboard",sep=",")

pos.g<-graph.data.frame(pos[,1:2], directed=TRUE)
E(pos.g)$weight<-pos[,3]
V(pos.g)$color<-"lightblue"
tkplot(pos.g,edge.label=E(pos.g)$weight)

##vizNet
library(visNetwork)
data <- toVisNetworkData(pos.g)
visNetwork(data$nodes, data$edges)%>% 
visIgraphLayout(layout = "layout_with_fr") %>%
visEdges(arrows = "middle")


#library(dplyr)
# edges <- dplyr ::mutate(data$edges, width = weight)  
# visNetwork(data$nodes, edges) %>% 
visNetwork(data$nodes, data$edges)%>% 
visIgraphLayout(layout = "layout_with_fr") %>%
visEdges(arrows = "middle")



#####基本統計量
##次数の計算
degree(keitai.g)           #矢印の方向を無視した次数
degree(keitai.g,mod="out") #矢印が出る方向の次数
degree(keitai.g,mod="in")　#矢印があ入る方向の次数

degree(pos.g)           #矢印の方向を無視した次数
degree(pos.g,mod="out") #矢印が出る方向の次数
degree(pos.g,mod="in")　#矢印があ入る方向の次数

##密度の計算
graph.density(keitai.g)
graph.density(pos.g)

##中心性の計算
closeness(pos.g)    #接近中心性関数closeness
betweennes(pos.g)   #媒介中心性関数betweenness

##クラスター係数
transitivity(keitai.g)
transitivity(pos.g)

##次数相関係数
assortativity.degree(keitai.g)
assortativity.degree(pos.g)

##パスの長さ
average.path.length(keitai.g)
average.path.length(pos.g)

##コミュニティー分析
library(linkcomm)
sp<-spinglass.community(pos.g)
wc<-walktrap.community(pos.g)
op<-optimal.community(pos.g)
sizes(wc)
membership(wc)
par(mfrow=c(1,2))
plot(sp,pos.g,vertex.label=V(pos.g)$name)
plot(wc,pos.g,vertex.label=V(pos.g)$name)


#オーバーラッピングノード
library(linkcomm)
#dat=get.data.frame(gakuhi)#karateのグラフをデータフレームに変換
#(gk<-getLinkCommunities(dat, hcmethod = "ward.2D"))　　#コミュニティ抽出

##オーバーラッピングノード
#getNodesIn(gk,clusterids = 1)
#getNodesIn(gk,clusterids = 2)
#getNodesIn(gk,clusterids = 3)

#get.shared.nodes(gk, comms = c(2,3))
#getCommunityConnectedness(gk)

##視覚化
#plot(gk,type="graph")

##
#plot(gk,type="graph",layout = "spencer.circle",scale.vertices = 0.5) #図18.15
#plot(gk,type="members",nodes = head(names(gk$numclusters), 12)) #図18.16

#####アンケート調査のデータ
####18.5.1テキストと語句間の関連性
test<-matrix(c(1,1,0,0,0, 0,1,1,1,1, 1,1,1,1,1, 1,0,1,1,0),5,4)
colnames(test)<-c("国民","生活", "安心","安全")
rownames(test)<-c("d1","d2","d3", "d4","d5")
install.packages("network")
library(network)
test.ne<-network(test)
plot(test.ne,displaylabels = TRUE),#図18.17

###18.5.2 テキストの分析
data.path<- "http://mjin.doshisha.ac.jp/data/anketo.csv"
anketo <-read.csv(data.path)
dim(anketo)

library(igraph)
library(dplyr)


g<-graph.data.frame(anketo)#ネットワークオブジェクトに変換
E(g)$weight<-anketo[,3]
plot(g,vertex.size=1,vertex.label="",edge.arrow.size=0.2)

sort(degree(g),decreasing=TRUE)[1:5]
sort.list(degree(g),decreasing=TRUE)[1:7],#ノードの番号を取り出す

###Fig6.6
ng<-neighborhood(g,1,3)[[1]]
motto<-induced.subgraph(g,ng)
motto <-simplify(motto)
plot(motto,vertex.size=1,edge.arrow.size=0.5,edge.label=E(motto)$weight, vertex.label.cex=1.2,vertex.label.color=1)

library(visNetwork)
visData <- toVisNetworkData(motto)
weights<-visData$edges[,3]

##パイプ%>%を使用せず、簡単に作成する方法
nodes<-data.frame(visData$nodes, font.color="black", font.size =10,size = 10)
edges<-data.frame(visData$edges,label=weights, arrows="to")
visNetwork(nodes,edges)

##パイプ%>%をもちいて、デザインする方法
nodes<-data.frame(visData$nodes, font.color="black", font.size =25,size = 10)
edges<-data.frame(visData$edges,label=weights, arrows="to")
visNetwork(nodes,edges,width= "100%",height="600px") %>% 
visIgraphLayout(layout="layout.fruchterman.reingold")
visNodes(shadow = list(enabled = TRUE, size = 50))


#Fig6.7「学費を」と関連している文節
gakuhi<-induced.subgraph(g,neighborhood(g,4,1)[[1]])
#gakuhi<-simplify(gakuhi)
tkplot(gakuhi,vertex.size=1,edge.arrow.size=0.5,edge.label=E(g)$weight,
vertex.label.cex=1.2,vertex.label.color="black")


visData <- toVisNetworkData(gakuhi)
weights<-visData$edges[,3]
nodes<-data.frame(visData$nodes, font.size =25,size=10)
edges<-data.frame(visData$edges,label=weights, arrows="to", width = 1.0, smooth=TRUE,shadow=TRUE)
edges<-data.frame(visData$edges,label=weights, arrows="to",smooth=TRUE,shadow=TRUE)
visNetwork(nodes,edges,width= "100%",height="600px") %>%  
visIgraphLayout(layout="layout.fruchterman.reingold")
#visHierarchicalLayout(direction = "LR")
#visIgraphLayout()

layout_with_sugiyama

Fig6.8
###辺の太さを度数に比例するようにデザインする
###ノードのサイズを次数に比例するように値を与える
#deg<-scale(degree(gakuhi),center=FALSE)+1
nodSize<-igraph::degree(gakuhi)
smal<-min(nodSize)
nodes<-data.frame(visData$nodes, font.size =25,size=5*nodSize)
edges<-data.frame(visData$edges,label=weights, arrows="to", width = weights, smooth=TRUE,shadow=TRUE)
visNetwork(nodes,edges,width= "100%",height="600px") %>%  
visIgraphLayout(layout="layout.fruchterman.reingold")

###コミュニティ分割
library(linkcomm)
set.seed(100)
#wc<-walktrap.community(gakuhi)
#sp<-spinglass.community(gakuhi)
CO<-cluster_optimal(gakuhi)
plot(CO,gakuhi,vertex.label=(gakuhi)$name,
	vertex.size=2,
vertex.label.dist=1,
	vertex.label.size=0.6,
	layout=layout_with_gem,
	edge.arrow.size=0.5,
	edge.color="grey50",
	vertex.label.color="black")



#fc<-fastgreedy.community(gakuhi)
#deg<-scale(igraph::degree(gakuhi),center=FALSE)+1
nodSize<-5*(igraph::degree(gakuhi))
weights<-visData$edges[,3]
comm<- as.numeric(membership(CO))

##パッケージvisNetworkを用いた図6.9の作成
nodSize<-5*(igraph::degree(gakuhi))　 #ノードのサイズの調整
weights<-visData$edges[,3]　　　　　　#辺の重みを取っておく
len<- length(table(membership(CO)))　 #コミュニティの数を計算
cols <- brewer.pal(len, "Paired")     #コミュニティごとの色を選択
##上記の結果を用いてノードとエッジのデザインを指定する
nodes<-data.frame(visData$nodes,color= cols[comm],size=nodSize)
edges<-data.frame(visData$edges,label=weights, arrows="to", smooth=TRUE,shadow=TRUE)
visNetwork(nodes,edges)　 　　　　　　#指定したデザインで作図する
#visNetwork(nodes,edges,width= "100%",height="650px")

##次のパッケージを用いて作成することができる
library(network)
library(ggnetwork)
library(ggplot2)
X<-asNetwork(gakuhi)   #igraphをnetworkクラスに変換する  
nodSize<-3*(igraph::degree(gakuhi))　 #ノードのサイズの調整
gnet<-ggnetwork(X,layout = "kamadakawai",arrow.gap = 0.025)

ggplot(gnet,aes(x, y, xend = xend, yend = yend)) +
      geom_edges(size = 0.5, color = "steelblue", 
         arrow = arrow(length = unit(5, "pt"), type = "closed")) +
    　geom_nodes(size =nodSize, color = cols[community]) +
    　geom_nodetext(aes(label = vertex.names)) +
    　theme_blank()


．．．
 
#ノードを取り除く
V(g)[1:5]
Vertex sequence:
g2<-g-"学費を",#ノード"学費を"を削除する
V(g2)[1:5]

####18.6　その他
library("bnlearn")
data(marks)
dim(marks)
head(marks,n=3)
cor(marks),#相関係数
res<-rsmax2(marks)
plot(res)

演習問題の解答
library(sand);data(aidsblog)
class(aidsblog)

aid.bet<-betweenness(aidsblog),#ノードの媒介中心性を求める
max(aid.bet),,,#媒介中心性の最大値を確認
  423.80
col<-colors()[1:length(aid.bet)],#色のリストから上位146個を順に用いる
plot(aidsblog,vertex.size=sqrt(aid.bet),edge.arrow.size=0.5,vertex.color=col)

####ノード134の周辺パス長さ3のサブグラフを抽出せよ
nb<-neighborhood(aidsblog,2,134)[[1]]
s134<-induced.subgraph(aidsblog,nb)
s134<-simplify(s134)
plot(s134,vertex.size=1,edge.arrow.size=0.5,vertex.label=nb)

s134<-simplify(s134)
plot(s134,vertex.size=1,edge.arrow.size=0.5,edge.label=E(aidsblog)$weight,vertex.label.cex=1.2,vertex.label.color=1)
 


wc<-walktrap.community(aidsblog)
plot(wc,aidsblog)
dendPlot(tt)

library(linkcomm)
dat=get.data.frame(idsweb)
gk<-getLinkCommunities(dat, hcmethod = "ward.D")
plot(gk,type="graph")


##
n<-50
#de<-sort.list(degree(g),decreasing=TRUE)[1:n]
de<-edge.betweenness(graph, weights =E(n.g)$weight)[1:n]
g2<-induced.subgraph(g,de)
plot(g2,vertex.size=2)
res<-numeric()
for(i in 1:n)res<-union(res,neighbors(g,de[i],mode="all"))
gs<-simplify(induced.subgraph(g,res))
#gs=induced.subgraph(g,res)
#plot(g,gs)
d1<-get.data.frame(gs)

d1<-d1[d1[,3]>0,]
gss<-graph.data.frame(d1)
plot(gss,vertex.size=2,edge.arrow.size=0.2)


net<-function(y,Cha){
   kekka1<-which(y[,1] %in% Cha)
   kekka2<-which(y[,2] %in% Cha)
   kekka<-unique(c(kekka1,kekka2))
   x<-y[kekka,]
   x.g<-graph.data.frame(x)
   E(x.g)$weight<-x[,3]
   plot(x.g, vertex.label=V(x.g)$name,vertex.size=1,
      layout=layout.fruchterman.reingold,edge.label=E(x.g)$weight,edge.arrow.size=0.5) }
 net4(X,Cha)

###その他
library(bnlearn),,#install.packages("bnlearn ")
data(marks)
dim(marks)
head(marks,n=3)

cor(marks),#相関係数

res<-rsmax2(marks)
plot(res),,#推定した構造を作図する．


##################
#類似度係数
ruijido2<-function(X){
library(vcd)

nl<-nrow(X)


##各係数の計算
res=matrix(0,nrow(X),13)
colnames(res)=c("com","Phi","LLR","US","Jacc","Dice","Ochi","Ande","PMI","LMI","PMI2","LMD","Z")

N=sum(X[,3])
for(i in 1:nrow(X)){
col1<-as.character(X[,1])
col2<-as.character(X[,2])
num1<-grep("TRUE",col1==X[i,1])
num2<-grep("TRUE",col2==X[i,1])
num3<-grep("TRUE",col1==X[i,2])
num4<-grep("TRUE",col2==X[i,2])
a<-X[i,3]; 
f10<-sum(num1,num2);b=f10-a;
f01<-sum(num3,num4);c=f01-a;dim(YY)
tab<-matrix(c(a,c,b,d),2)
ass<-assocstats(tab)
res[i,1]=(a^2)/(f10*f01)
res[i,2]=Phi=ass$phi
res[i,3]=LLR=ass$chisq_tests[2,1]
res[i,4]=US=log((a+0.5)*(d+05)/((b+0.5)*(c+05)))+3.29*sqrt(1/(a+0.5)+1/(b+0.5)+1/(c+0.5)+1/(d+0.5))
res[i,5]=Jacc=a/(a+b+c)
res[i,6]=Dice=2*a/(2*a+b+c)
res[i,7]=Ochi=a/sqrt(f10*f01)
res[i,8]=Ande=a/(a+2*(b+c))
res[i,9]=PMI=-log(N*a/(f10*f01))
res[i,10]=LMI=-a*log(N*a/(f10*f01))
res[i,11]=PMI2=-log(N*a^2/(f10*f01))
res[i,12]=LMD=-PMI2-log(a/N)
res[i,13]=Z=chisq.test(tab[1:2,1:2],simulate.p.value = TRUE)$residual[1,1]
}
RES=data.frame(X,res)

}

##############各指標のネットワーク・グラフを作成する
library(igraph)
library(RColorBrewer)
library(visNetwork)
data.path<- "http://mjin.doshisha.ac.jp/data/anketo.csv"
Y<-read.csv(data.path)

Nrow=nrow(Y)
Summary<-cbind(Y,matrix(0,Nrow,8))
colnames(Summary)<-c("Term1", "Term2", "Frequency", "Term_Fre", "Term_Fre","Phi", "LLR","Jaccard", "Ochiai", "MI","LFMD")
col1<-as.character(Y[,1])
col2<-as.character(Y[,2])
N<-sum(Y[,3])
N<-sum(Y[,3])
 for(i in 1:Nrow){
  num1<-grep("TRUE",col1==Y[i,1])
  num2<-grep("TRUE",col2==Y[i,1])
  num3<-grep("TRUE",col1==Y[i,2])
  num4<-grep("TRUE",col2==Y[i,2])
  a<-Y[i,3]; b<-sum(Y[c(num1,num2),3])-a; c=sum(Y[c(num3,num4),3])-a; d<-N-a-b-c;
  
  Summary[i,6]<- (a*d-b*c)/sqrt((a+b)*(a+c)*(b+d)*(c+d))#Phi
  Summary[i,7]<- -2*a*log2(N*a/((a+b)*(a+c)))#LLR
  Summary[i,8]<- a/(a+b+c)#Jaccard
  Summary[i,9]<- a/sqrt((a+b)*(a+c))#Ochiai
  Summary[i,10]<- -(a/N)*log2(N*a/((a+b)*(a+c)))#MI
  Summary[i,11]<- log2(a^2/((a+b)*(a+c)))+log2(a/N)#LFMD
  Summary[i,4]<-sum(Y[unique(c(num1,num2)),3])
  Summary[i,5]<-sum(Y[unique(c(num3,num4)),3])}
##データをスケーリングする 
temp1<-as.matrix(t(Summary[,10:11]))
Max<-apply(temp1,1,max)
Min<-apply(temp1,1,min)
temp<-t((temp1-Min)/(Max-Min))
Summary[,10:11]<-temp
　####度の係数を用いるか指定、7列はLLR
Val<-Summary[,10]
DataVal<-as.data.frame(cbind(Y[,1:2],y=round(Val,2), colnum=1:Nrow))
DataVal<-DataVal[order(DataVal[,3],decreasing=TRUE),]
###上位何個を用いるかを指定する。例えば、上位30個
trueData<-DataVal[1:30,]
FreData<-Y[trueData[,4],]
####作図する
x.g<-graph.data.frame(trueData, directed=TRUE)
E(x.g)$weight<-trueData[,3]
visData <- toVisNetworkData(x.g)
FreCol1<-as.character(FreData[,1])
FreCol2<-as.character(FreData[,2])
Unique<-unique(c(FreCol1,FreCol2))
Fre<-c()
for(i in 1:length(Unique)){num1<-grep("TRUE",FreCol1==Unique[i])
 num2<-grep("TRUE",FreCol2==Unique[i])
 num<-unique(c(num1,num2))
 Fre<-c(Fre,sum(FreData[num,3]))
　}
nodeSize<-round(scale(Fre, center=min(Fre), scale =(max(Fre)-min(Fre)))*10)+1
weights<-visData$edges[,3]
nodes<-data.frame(visData$nodes, font.color="black", font.size =30, value = nodeSize)
edges<-data.frame(visData$edges,label=weights, font.size =20,arrows="to", width = 1.0, dashes=TRUE, smooth=TRUE,shadow=TRUE)
visNetwork(nodes,edges) %>% visOptions(highlightNearest=TRUE,nodesIdSelection=TRUE) %>% visIgraphLayout(layout="layout.fruchterman.reingold")
