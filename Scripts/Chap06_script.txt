##第6章　テキストの特徴分析
##pp.102-103
##TF-IDFを計算するスクリプト
x<-matrix(c(1, 3, 0, 0, 0, 0, 2, 1, 3, 2,
            2, 1, 0, 2, 3, 1, 0, 2, 1, 0), 5) #表6.2の入力
##2種類の重みTF-IDFを計算する
N<-nrow(x)
M<-ncol(x)
w1<-matrix(0, N, M)
w2<-matrix(0, N, M)
for(i in 1:N){
  for(j in 1:M){
    df<-N/sum(as.integer(x[, j]>0))
    w1[i, j]<-x[i, j]*log(df)
    w2[i, j]<-log(x[i, j]+1)*log(df+1)
  }
}
round(w1, 4)
#<表6.3と同じであるため省略>
round(w2, 4) #表6.3と比べるとd1における重みのランキングが異なることに注意してほしい．

##pp.111
##本節の内容に関するRスクリプト
sakubun.path<-"http://mjin.doshisha.ac.jp/data/sakubun3f.csv"
##または次から読み込む．
sakubun.path<-"https://www.iwanami.co.jp/files/moreinfo/0298960/sakubun3f.csv"
sakubun<-read.csv(sakubun.path, row.names=1)#mac OSの場合：sakubun<-read.csv(sakubun.path, row.names=1, fileEncoding="shift-JIS")
sakubun2<-sakubun[, -32]/apply(sakubun, 1, sum)
install.packages("psych")
library(psych)
##図6.3の作成
fa.parallel(sakubun2, fa="pc")
##サンプリングデータを生成するときには，データによっては正しく生成できない場合がある．その時にはシミュレーションの結果を目安とした方がよい．
install.packages("FactoMineR")
library(FactoMineR)
##相関係数行列を用いた主成分分析と図6.4の作成
pca<-PCA(sakubun2)
round(pca$eig, 3)#固有値などを返す．
ki<-round(pca$eig[1:2, 2], 2)#寄与率をkiに保存する．
##図6.5(a)の作成
biplot(pca$ind$coord, pca$var$coord,
       xlab=paste("PCA_1(", ki[1], "%"),
       ylab=paste("PCA_2(", ki[2], "%"))
##分散共分散行列を用いた主成分分析と図6.5(b)の作成を行う
pca<-PCA(sakubun2, scale.unit=FALSE)
ki<-round(pca$eig[1:2, 2], 2)
biplot(pca$ind$coord, pca$var$coord,
       xlab=paste("PCA_1(", ki[1], "%)"),
       ylab=paste("PCA_2(", ki[2], "%)"))

##pp.113
##本節内容に関するRスクリプト
#install.packages("FactoMineR")
#library(FactoMineR)
res<-CA(sakubun) #図6.6の作成

##本節の内容に関するRスクリプト
sakubunp<-sakubun[, -32]/rowSums(sakubun)
res<-svd(sakubunp)
X<-res$u
rownames(X)<-rownames(sakubunp)
Y<-res$v
rownames(Y)<-colnames(sakubunp)
biplot(scale(X), scale(Y), xlab="Dim_1", ylab="Dim_2")

##pp.119-120
##本節の内容に関するRスクリプト
##まず，パッケージNMFに用いるパッケージをインストールする．
##R3.5の場合
source("http://bioconductor.org/biocLite.R")
biocLite("Biobase") #NMFで必要なパッケージをインストール
##R4.0以後の場合
if(!requireNamespace("BiocManager", quietly=TRUE))
  install.packages("BiocManager")
BiocManager::install("Biobase")
install.packages("NMF")
library(NMF)
set.seed(0)
res<-nmf(sakubunp, 3) #3因子のNMFを行う．
basis(res)            #行のスコアを返す．
basismap(res)         #図6.9を作成する．
coef(res)             #列のスコアを返す．
##scoef(res, scale=1)で各変数のスコアの合計が1になるように標準することができる．
coefmap(res)          #図6.10を作成する．
consensusmap(res)     #図6.11を作成する．
