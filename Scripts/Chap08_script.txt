##第8章　テキストクラスタリング
##pp.151
##図8.1~9.2を作成するスクリプト
##ユークリッド距離とward.D2法
sakubun.path<-"http://mjin.doshisha.ac.jp/data/sakubun259f.csv"
##または次から読み込む．
sakubun.path<-"https://www.iwanami.co.jp/files/moreinfo/0298960/sakubun259f.csv"
sakubun<-read.csv(sakubun.path, row.names=1)
##Ｒ4.0以上の場合：sakubun<-read.csv(sakubun.path, row.names=1, fileEncoding="CP932")
##mac OSの場合：saku11<-read.csv(sakubun.path, row.names=1, fileEncoding="shift-JIS")
sakubunp<-sakubun/rowSums(sakubun)
plot(hclust(dist(sakubunp[, -32]), "ward.D2"), hang=-1)

##RJSD非類似度
rjsd<-function(x){
  x<-x+1e-006#分母がゼロにならないようにする
  x<-(x/apply(x, 1, sum))
  apply(x, 1, function(y){#各行に次の関数を適用する
    apply(x, 1, function(z){
      rjsd<-sqrt(sum((y*log(2*y/(y+z))+z*log(2*z/(y+z)))/2))
    })
  })
}
##RJSD非類似度とward.D2法
plot(hclust(as.dist(rjsd(sakubunp[, -32])), "ward.D2"), hang=-1)

##パッケージphilentropyには50数種類の類似度と距離を計算する関数がある．その中の関数JSDはJensen-Shannon Divergenceである．
##関連数式は，https://joss.theoj.org/papers/10.21105/joss.00765に示されている．

##pp.153
##図8.3と8.4を作成するスクリプト
##ユークリッド距離を用いた場合
heatmap(as.matrix(sakubunp[, -32])) 　　　　　#デフォルトのまま
##個体間の非類似度はRJSD，変数間の非類似度はキャンベラ距離を用いた場合
R<-hclust(as.dist(rjsd(sakubunp[, -32])), "ward.D2")
C<-hclust(dist(t(sakubunp[, -32]), "can"), "ward.D2")
heatmap(as.matrix(sakubunp[, -32]), Colv=as.dendrogram(C),
        Rowv=as.dendrogram(R))　　　　　　　  #図8.3の作成
##以下図8.4を作成する．
##引数k_row= は行のクラスター，k_col= は列のクラスターを指定する
install.packages(c("heatmaply", "gplots"))
library(heatmaply); library(gplots)
heatmaply(as.matrix(sakubunp[, -32]), Colv=as.dendrogram(C),
          Rowv=as.dendrogram(R), k_row=3, k_col=4) #図8.4の作成

##pp.156-157
##k平均法の例
set.seed(10)
resu<-kmeans(sakubunp[, -32], center=3)
summary(resu)
resu$cluster #クラスタリングの結果を返す．
#<結果は省略する>


##pp.160
install.packages("NbClust")
library(NbClust)

##以下の18種類の指標と種類のクラスタリンク法を用いて出たsakubunpのクラスター数を推定してみよう。
inde<-c("kl", "ch", "hartigan", "cindex", "db", "silhouette", "duda", "pseudot2", "ratkowsky", 
　　　　　　"ball", "ptbiserial", "gap", "frey", "mcclain", "gamma", "gplus", "tau", "dunn")
meth<-c("kmean", "ward.D", "ward.D2", "single", "complete",
                   "average", "mcquitty", "median", "centroid")
legi<-length(inde)
legj<-length(meth)              
resM2<-matrix(0, legi, legj)
rownames(resM2)<-inde
colnames(resM2)<-meth
XX<-sakubunp[, -32]
for(i in 1:legi){
  for(j in 1:legj)
  resM2[i, j]<-as.integer(NbClust(XX, method=meth[j], index=inde[i])$Best.nc[1])
}
resM2
#<結果は省略>

##pp.161-162
##主成分分析とt-SNE法の比較
##図8.6に用いたデータ(11人が10個の異なるテーマについた書いた作文から抽出した名詞)を主成分分析、t-SNE、UMAPの二次元散布図を比較してみよう
spath<-"http://mjin.doshisha.ac.jp/iwanami/data/saku11.csv"
##または次から読み込む．
spath<-"https://www.iwanami.co.jp/files/moreinfo/0298960/saku11.csv"
saku11<-read.csv(spath,head=T,row.names=1)
saku11p<-100*saku11/apply(saku11,1,sum)
col<-c("#000000","#ff4b00","#03af7a", "#005aff","#4dc4ff",　
"#990099","#804000","#67001F","#F39800","#FF5500")        #テーマごとの10種類の色ベクトルを作成する
##col<-c(1:8, "saddlebrown", "rosybrown2")　　            #このように指定してもよい。　           　

XX<-saku11p[, 1:40]
##主成分散布図
pca<-prcomp(XX)$x
plot(pca[, 1], pca[, 2], pch="", xlab="PCA1", ylab="PCA2")
text(pca[, 1], pca[, 2], rownames(XX), col=col)

##t-SNE法による視覚化
install.packages("Rtsne")
library(Rtsne)                                            #t-SNEのパッケージを読み込む．
set.seed(0)
sne<-Rtsne(as.matrix(XX))$Y                               #引数perplexityなどに依存する。デフォルトは30になっている
plot(sne[, 1], sne[, 2], xlab="SNE1", ylab="SNE2")
text(sne[, 1], sne[, 2], rownames(XX), col=col)           #図8.6(b)を再現するため，乱数の種を指定する．

##pp.164-165
##図8.7のUMAP作成
install.packages("uwot"); 
library(uwot)
out<-umap(XX, n_neighbors=5)
plot(out, type="n"); text(out[, 1], out[, 2], rownames(XX), col=col)

##UMAPの結果はn_neighborsに依存する
out<-umap(XX, n_neighbors=15)
plot(out, type="n"); text(out[, 1], out[, 2], rownames(XX), col=col)
